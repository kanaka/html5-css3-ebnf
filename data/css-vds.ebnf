assignments = assignment (<rS> assignment)* <S>?
(*assignments = assignment (<delimeter> assignment)* <S>? *)

assignment = non-terminal <'='> <S> single-bar

<non-terminal> = <S> non-property <S>
               | <S> property     <S>


(* Operator precendence: mult, juxt, &&, ||, | *)

single-bar = double-bar (<rS> <'|'> <rS> <S> double-bar)*

double-bar = double-amp (<rS> <'||'> <rS> <S> double-amp)*

double-amp = juxtapose (<rS> <'&&'> <rS> <S> juxtapose)*

juxtapose  = (<S> component comma? <rS>)* component

component = component-single
          | component-multiplied

component-single = literal
                 / func
                 / keyword-value
                 / non-property
                 / property
                 / brackets
                 / block

component-multiplied = component-single multiplier

keyword-value = identifier
non-property  = <'<'> identifier <'>'>
property      = <"<'"> identifier <"'>">
brackets      = <'['> <S> single-bar <S> <']'> bang?
block         = '{' <rS> juxtapose <rS> '}'
func          = identifier <'('> <S> single-bar <S> <')'>

multiplier = question
           | asterisk
           | plus
           | braces
           | hash 
           | hash-braces

hash-braces = <hash> braces

question  = <'?'>
asterisk  = <'*'>
plus      = <'+'>
braces    = bracesA
          | bracesA-B
          | bracesA-
bracesA   = <'{'> digit+ <'}'>
bracesA-B = <'{'> digit+ <','> digit+ <'}'>
bracesA-  = <'{'> digit+ <',}'>
hash      = <'#'>
bang      = <'!'>

digit = #'[0-9]'
comma = ','
delimeter = <S> ';' <S>
literal = #'[-a-zA-Z0-9,/:;%]+'
        | <"'"> #'[-a-zA-Z0-9\u0028\u0029,/\u005B\u005D\u002A\u002B\u003C\u003E\u003D]' <"'">
        | #'[\u0028\u0029]'
<identifier> = #'@?[-a-zA-Z][-a-zA-Z0-9]*(?:\u0028\u0029)?(?x) #identifier'
S = #'\s*'
rS = #'\s+'
