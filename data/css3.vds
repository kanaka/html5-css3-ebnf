<'align-content'> = flex-start | flex-end | center | space-between | space-around | space-evenly | stretch
<'align-items'> = flex-start | flex-end | center | baseline | stretch
<'align-self'> = auto | flex-start | flex-end | center | baseline | stretch
<'all'> = initial | inherit | unset
<'animation'> = <single-animation>#
<'animation-delay'> = <time>#
<'animation-direction'> = <single-animation-direction>#
<'animation-duration'> = <time>#
<'animation-fill-mode'> = <single-animation-fill-mode>#
<'animation-iteration-count'> = <single-animation-iteration-count>#
<'animation-name'> = [ none | <keyframes-name> ]#
<'animation-play-state'> = <single-animation-play-state>#
<'animation-timing-function'> = <single-timing-function>#
<'backface-visibility'> = visible | hidden
<'background'> = [ <bg-layer> , ]* <final-bg-layer>
<'background-attachment'> = <attachment>#
<'background-blend-mode'> = <blend-mode>#
<'background-clip'> = <box>#
<'background-color'> = <color>
<'background-image'> = <bg-image>#
<'background-origin'> = <box>#
<'background-position'> = <position>#
<'background-repeat'> = <repeat-style>#
<'background-size'> = <bg-size>#
<'block-size'> = <'width'>
<'border'> = <br-width> || <br-style> || <color>
<'border-block-end'> = <'border-width'> || <'border-style'> || <'color'>
<'border-block-end-color'> = <'color'>
<'border-block-end-style'> = <'border-style'>
<'border-block-end-width'> = <'border-width'>
<'border-block-start'> = <'border-width'> || <'border-style'> || <'color'>
<'border-block-start-color'> = <'color'>
<'border-block-start-style'> = <'border-style'>
<'border-block-start-width'> = <'border-width'>
<'border-bottom'> = <br-width> || <br-style> || <color>
<'border-bottom-color'> = <color>
<'border-bottom-left-radius'> = <length-percentage>{1,2}
<'border-bottom-right-radius'> = <length-percentage>{1,2}
<'border-bottom-style'> = <br-style>
<'border-bottom-width'> = <br-width>
<'border-collapse'> = collapse | separate
<'border-color'> = <color>{1,4}
<'border-image'> = <'border-image-source'> || <'border-image-slice'> [ / <'border-image-width'> | / <'border-image-width'>? / <'border-image-outset'> ]? || <'border-image-repeat'>
<'border-image-outset'> = [ <length> | <number> ]{1,4}
<'border-image-repeat'> = [ stretch | repeat | round | space ]{1,2}
<'border-image-slice'> = <number-percentage>{1,4} && fill?
<'border-image-source'> = none | <image>
<'border-image-width'> = [ <length-percentage> | <number> | auto ]{1,4}
<'border-inline-end'> = <'border-width'> || <'border-style'> || <'color'>
<'border-inline-end-color'> = <'color'>
<'border-inline-end-style'> = <'border-style'>
<'border-inline-end-width'> = <'border-width'>
<'border-inline-start'> = <'border-width'> || <'border-style'> || <'color'>
<'border-inline-start-color'> = <'color'>
<'border-inline-start-style'> = <'border-style'>
<'border-inline-start-width'> = <'border-width'>
<'border-left'> = <br-width> || <br-style> || <color>
<'border-left-color'> = <color>
<'border-left-style'> = <br-style>
<'border-left-width'> = <br-width>
<'border-radius'> = <length-percentage>{1,4} [ / <length-percentage>{1,4} ]?
<'border-right'> = <br-width> || <br-style> || <color>
<'border-right-color'> = <color>
<'border-right-style'> = <br-style>
<'border-right-width'> = <br-width>
<'border-spacing'> = <length> <length>?
<'border-style'> = <br-style>{1,4}
<'border-top'> = <br-width> || <br-style> || <color>
<'border-top-color'> = <color>
<'border-top-left-radius'> = <length-percentage>{1,2}
<'border-top-right-radius'> = <length-percentage>{1,2}
<'border-top-style'> = <br-style>
<'border-top-width'> = <br-width>
<'border-width'> = <br-width>{1,4}
<'bottom'> = <length> | <percentage> | auto
<'box-decoration-break'> = slice | clone
<'box-shadow'> = none | <shadow>#
<'box-sizing'> = content-box | border-box
<'break-after'> = auto | avoid | avoid-page | page | left | right | recto | verso | avoid-column | column | avoid-region | region
<'break-before'> = auto | avoid | avoid-page | page | left | right | recto | verso | avoid-column | column | avoid-region | region
<'break-inside'> = auto | avoid | avoid-page | avoid-column | avoid-region
<'caption-side'> = top | bottom | block-start | block-end | inline-start | inline-end
<'caret-color'> = auto | <color>
<'clear'> = none | left | right | both | inline-start | inline-end
<'clip'> = <shape> | auto
<'clip-path'> = <clip-source> | [ <basic-shape> || <geometry-box> ] | none
<'color'> = <color>
<'column-count'> = <number> | auto
<'column-fill'> = auto | balance
<'column-gap'> = <length> | normal
<'column-rule'> = <'column-rule-width'> || <'column-rule-style'> || <'column-rule-color'>
<'column-rule-color'> = <color>
<'column-rule-style'> = <br-style>
<'column-rule-width'> = <br-width>
<'column-span'> = none | all
<'column-width'> = <length> | auto
<'columns'> = <'column-width'> || <'column-count'>
<'content'> = [ <image> , ]* [ normal | none | <content-list> ] [/ <string> ]?
<'counter-increment'> = [ <custom-ident> <integer>? ]+ | none
<'counter-reset'> = [ <custom-ident> <integer>? ]+ | none
<'cursor'> = [ [ <url> [ <x> <y> ]? , ]* [ auto | default | none | context-menu | help | pointer | progress | wait | cell | crosshair | text | vertical-text | alias | copy | move | no-drop | not-allowed | e-resize | n-resize | ne-resize | nw-resize | s-resize | se-resize | sw-resize | w-resize | ew-resize | ns-resize | nesw-resize | nwse-resize | col-resize | row-resize | all-scroll | zoom-in | zoom-out | grab | grabbing ] ]
<'direction'> = ltr | rtl
<'display'> = [ <display-outside> || <display-inside> ] | <display-listitem> | <display-internal> | <display-box> | <display-legacy>
<'empty-cells'> = show | hide
<'filter'> = none | <filter-function-list>
<'flex'> = none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]
<'flex-basis'> = content | <'width'>
<'flex-direction'> = row | row-reverse | column | column-reverse
<'flex-flow'> = <'flex-direction'> || <'flex-wrap'>
<'flex-grow'> = <number>
<'flex-shrink'> = <number>
<'flex-wrap'> = nowrap | wrap | wrap-reverse
<'float'> = left | right | none | inline-start | inline-end
<'font'> = [ [ <'font-style'> || <font-variant-css21> || <'font-weight'> || <'font-stretch'> ]? <'font-size'> [ / <'line-height'> ]? <'font-family'> ] | caption | icon | menu | message-box | small-caption | status-bar
<'font-family'> = [ <family-name> | <generic-family> ]#
<'font-feature-settings'> = normal | <feature-tag-value>#
<'font-kerning'> = auto | normal | none
<'font-language-override'> = normal | <string>
<'font-size'> = <absolute-size> | <relative-size> | <length-percentage>
<'font-size-adjust'> = none | <number>
<'font-stretch'> = normal | ultra-condensed | extra-condensed | condensed | semi-condensed | semi-expanded | expanded | extra-expanded | ultra-expanded
<'font-style'> = normal | italic | oblique
<'font-synthesis'> = none | [ weight || style ]
<'font-variant'> = normal | none | [ <common-lig-values> || <discretionary-lig-values> || <historical-lig-values> || <contextual-alt-values> || stylistic( <feature-value-name> ) || historical-forms || styleset( <feature-value-name># ) || character-variant( <feature-value-name># ) || swash( <feature-value-name> ) || ornaments( <feature-value-name> ) || annotation( <feature-value-name> ) || [ small-caps | all-small-caps | petite-caps | all-petite-caps | unicase | titling-caps ] || <numeric-figure-values> || <numeric-spacing-values> || <numeric-fraction-values> || ordinal || slashed-zero || <east-asian-variant-values> || <east-asian-width-values> || ruby ]
<'font-variant-alternates'> = normal | [ stylistic( <feature-value-name> ) || historical-forms || styleset( <feature-value-name># ) || character-variant( <feature-value-name># ) || swash( <feature-value-name> ) || ornaments( <feature-value-name> ) || annotation( <feature-value-name> ) ]
<'font-variant-caps'> = normal | small-caps | all-small-caps | petite-caps | all-petite-caps | unicase | titling-caps
<'font-variant-east-asian'> = normal | [ <east-asian-variant-values> || <east-asian-width-values> || ruby ]
<'font-variant-ligatures'> = normal | none | [ <common-lig-values> || <discretionary-lig-values> || <historical-lig-values> || <contextual-alt-values> ]
<'font-variant-numeric'> = normal | [ <numeric-figure-values> || <numeric-spacing-values> || <numeric-fraction-values> || ordinal || slashed-zero ]
<'font-variant-position'> = normal | sub | super
<'font-weight'> = normal | bold | bolder | lighter | 100 | 200 | 300 | 400 | 500 | 600 | 700 | 800 | 900
<'grid'> = <'grid-template'> | <'grid-template-rows'> / [ auto-flow && dense? ] <'grid-auto-columns'>? | [ auto-flow && dense? ] <'grid-auto-rows'>? / <'grid-template-columns'>
<'grid-area'> = <grid-line> [ / <grid-line> ]{0,3}
<'grid-auto-columns'> = <track-size>+
<'grid-auto-flow'> = [ row | column ] || dense
<'grid-auto-rows'> = <track-size>+
<'grid-column'> = <grid-line> [ / <grid-line> ]?
<'grid-column-end'> = <grid-line>
<'grid-column-gap'> = <length-percentage>
<'grid-column-start'> = <grid-line>
<'grid-gap'> = <'grid-row-gap'> <'grid-column-gap'>?
<'grid-row'> = <grid-line> [ / <grid-line> ]?
<'grid-row-end'> = <grid-line>
<'grid-row-gap'> = <length-percentage>
<'grid-row-start'> = <grid-line>
<'grid-template'> = none | [ <'grid-template-rows'> / <'grid-template-columns'> ] | [ <line-names>? <string> <track-size>? <line-names>? ]+ [ / <explicit-track-list> ]?
<'grid-template-areas'> = none | <string>+
<'grid-template-columns'> = none | <track-list> | <auto-track-list>
<'grid-template-rows'> = none | <track-list> | <auto-track-list>
<'height'> = [ <length> | <percentage> ] && [ border-box | content-box ]? | available | min-content | max-content | fit-content | auto
<'hyphens'> = none | manual | auto
<'image-orientation'> = from-image | <angle> | [ <angle>? flip ]
<'image-rendering'> = auto | crisp-edges | pixelated
<'image-resolution'> = [ from-image || <resolution> ] && snap?
<'ime-mode'> = auto | normal | active | inactive | disabled
<'inline-size'> = <'width'>
<'isolation'> = auto | isolate
<'justify-content'> = flex-start | flex-end | center | space-between | space-around | space-evenly
<'left'> = <length> | <percentage> | auto
<'letter-spacing'> = normal | <length>
<'line-break'> = auto | loose | normal | strict
<'line-height'> = normal | <number> | <length> | <percentage>
<'list-style'> = <'list-style-type'> || <'list-style-position'> || <'list-style-image'>
<'list-style-image'> = <url> | none
<'list-style-position'> = inside | outside
<'list-style-type'> = <counter-style> | <string> | none
<'margin'> = [ <length> | <percentage> | auto ]{1,4}
<'margin-block-end'> = <'margin-left'>
<'margin-block-start'> = <'margin-left'>
<'margin-bottom'> = <length> | <percentage> | auto
<'margin-inline-end'> = <'margin-left'>
<'margin-inline-start'> = <'margin-left'>
<'margin-left'> = <length> | <percentage> | auto
<'margin-right'> = <length> | <percentage> | auto
<'margin-top'> = <length> | <percentage> | auto
<'mask'> = <mask-layer>#
<'mask-clip'> = [ <geometry-box> | no-clip ]#
<'mask-composite'> = <compositing-operator>#
<'mask-image'> = <mask-reference>#
<'mask-mode'> = <masking-mode>#
<'mask-origin'> = <geometry-box>#
<'mask-position'> = <position>#
<'mask-repeat'> = <repeat-style>#
<'mask-size'> = <bg-size>#
<'mask-type'> = luminance | alpha
<'max-height'> = <length> | <percentage> | none | max-content | min-content | fit-content | fill-available
<'max-width'> = <length> | <percentage> | none | max-content | min-content | fit-content | fill-available
<'min-block-size'> = <'min-width'>
<'min-height'> = <length> | <percentage> | auto | max-content | min-content | fit-content | fill-available
<'min-inline-size'> = <'min-width'>
<'min-width'> = <length> | <percentage> | auto | max-content | min-content | fit-content | fill-available
<'mix-blend-mode'> = <blend-mode>
<'object-fit'> = fill | contain | cover | none | scale-down
<'object-position'> = <position>
<'offset-block-end'> = <'left'>
<'offset-block-start'> = <'left'>
<'offset-inline-end'> = <'left'>
<'offset-inline-start'> = <'left'>
<'opacity'> = <number>
<'order'> = <integer>
<'orphans'> = <integer>
<'outline'> = [ <'outline-color'> || <'outline-style'> || <'outline-width'> ]
<'outline-color'> = <color> | invert
<'outline-offset'> = <length>
<'outline-style'> = auto | <br-style>
<'outline-width'> = <br-width>
<'overflow'> = visible | hidden | scroll | auto
<'overflow-wrap'> = normal | break-word
<'overflow-x'> = visible | hidden | scroll | auto
<'overflow-y'> = visible | hidden | scroll | auto
<'padding'> = [ <length> | <percentage> ]{1,4}
<'padding-block-end'> = <'padding-left'>
<'padding-block-start'> = <'padding-left'>
<'padding-bottom'> = <length> | <percentage>
<'padding-inline-end'> = <'padding-left'>
<'padding-inline-start'> = <'padding-left'>
<'padding-left'> = <length> | <percentage>
<'padding-right'> = <length> | <percentage>
<'padding-top'> = <length> | <percentage>
<'page-break-after'> = auto | always | avoid | left | right
<'page-break-before'> = auto | always | avoid | left | right
<'page-break-inside'> = auto | avoid
<'perspective'> = none | <length>
<'perspective-origin'> = <position>
<'pointer-events'> = auto | none | visiblePainted | visibleFill | visibleStroke | visible | painted | fill | stroke | all | inherit
<'position'> = static | relative | absolute | sticky | fixed
<'quotes'> = [ <string> <string> ]+ | none
<'resize'> = none | both | horizontal | vertical
<'right'> = <length> | <percentage> | auto
<'ruby-align'> = start | center | space-between | space-around
<'ruby-merge'> = separate | collapse | auto
<'ruby-position'> = over | under | inter-character
<'scroll-behavior'> = auto | smooth
<'scroll-snap-coordinate'> = none | <position>#
<'scroll-snap-destination'> = <position>
<'scroll-snap-type'> = none | mandatory | proximity
<'shape-image-threshold'> = <number>
<'shape-margin'> = <length-percentage>
<'shape-outside'> = none | <shape-box> || <basic-shape> | <image>
<'tab-size'> = <integer> | <length>
<'table-layout'> = auto | fixed
<'text-align'> = start | end | left | right | center | justify | match-parent
<'text-align-last'> = auto | start | end | left | right | center | justify
<'text-combine-upright'> = none | all | [ digits <integer>? ]
<'text-decoration'> = <'text-decoration-line'> || <'text-decoration-style'> || <'text-decoration-color'>
<'text-decoration-color'> = <color>
<'text-decoration-line'> = none | [ underline || overline || line-through || blink ]
<'text-decoration-style'> = solid | double | dotted | dashed | wavy
<'text-emphasis'> = <'text-emphasis-style'> || <'text-emphasis-color'>
<'text-emphasis-color'> = <color>
<'text-emphasis-position'> = [ over | under ] && [ right | left ]
<'text-emphasis-style'> = none | [ [ filled | open ] || [ dot | circle | double-circle | triangle | sesame ] ] | <string>
<'text-indent'> = <length-percentage> && hanging? && each-line?
<'text-orientation'> = mixed | upright | sideways
<'text-overflow'> = [ clip | ellipsis | <string> ]{1,2}
<'text-rendering'> = auto | optimizeSpeed | optimizeLegibility | geometricPrecision
<'text-shadow'> = none | <shadow-t>#
<'text-transform'> = none | capitalize | uppercase | lowercase | full-width
<'text-underline-position'> = auto | [ under || [ left | right ] ]
<'top'> = <length> | <percentage> | auto
<'touch-action'> = auto | none | [ [ pan-x | pan-left | pan-right ] || [ pan-y | pan-up | pan-down ] || pinch-zoom ] | manipulation
<'transform'> = none | <transform-list>
<'transform-box'> = border-box | fill-box | view-box
<'transform-origin'> = [ <length-percentage> | left | center | right | top | bottom ] | [ [ <length-percentage> | left | center | right ] && [ <length-percentage> | top | center | bottom ] ] <length>?
<'transform-style'> = flat | preserve-3d
<'transition'> = <single-transition>#
<'transition-delay'> = <time>#
<'transition-duration'> = <time>#
<'transition-property'> = none | <single-transition-property>#
<'transition-timing-function'> = <single-transition-timing-function>#
<'unicode-bidi'> = normal | embed | isolate | bidi-override | isolate-override | plaintext
<'vertical-align'> = baseline | sub | super | text-top | text-bottom | middle | top | bottom | <percentage> | <length>
<'visibility'> = visible | hidden | collapse
<'white-space'> = normal | pre | nowrap | pre-wrap | pre-line
<'widows'> = <integer>
<'width'> = [ <length> | <percentage> ] && [ border-box | content-box ]? | available | min-content | max-content | fit-content | auto
<'will-change'> = auto | <animateable-feature>#
<'word-break'> = normal | break-all | keep-all
<'word-spacing'> = normal | <length-percentage>
<'word-wrap'> = normal | break-word
<'writing-mode'> = horizontal-tb | vertical-rl | vertical-lr | sideways-rl | sideways-lr
<'z-index'> = auto | <integer>
<absolute-size> = xx-small | x-small | small | medium | large | x-large | xx-large
<alpha-value> = <number> | <percentage>
<angle-percentage> = <angle> | <percentage>
<animateable-feature> = scroll-position | contents | <custom-ident>
<attachment> = scroll | fixed | local
<attr()> = attr( <attr-name> <type-or-unit>? [, <attr-fallback> ]? )
<auto-repeat> = repeat( [ auto-fill | auto-fit ] , [ <line-names>? <fixed-size> ]+ <line-names>? )
<auto-track-list> = [ <line-names>? [ <fixed-size> | <fixed-repeat> ] ]* <line-names>? <auto-repeat>
[ <line-names>? [ <fixed-size> | <fixed-repeat> ] ]* <line-names>?
<basic-shape> = <inset()> | <circle()> | <ellipse()> | <polygon()>
<bg-image> = none | <image>
<bg-layer> = <bg-image> || <position> [ / <bg-size> ]? || <repeat-style> || <attachment> || <box>{1,2}
<bg-size> = [ <length-percentage> | auto ]{1,2} | cover | contain
<blend-mode> = normal | multiply | screen | overlay | darken | lighten | color-dodge | color-burn | hard-light | soft-light | difference | exclusion | hue | saturation | color | luminosity
<blur()> = blur( <length> )
<box> = border-box | padding-box | content-box
<br-style> = none | hidden | dotted | dashed | solid | double | groove | ridge | inset | outset
<br-width> = <length> | thin | medium | thick
<brightness()> = brightness( <number-percentage> )
<cf-final-image> = <image> | <color>
<cf-mixing-image> = <percentage>? && <image>
<circle()> = circle( [ <shape-radius> ]? [ at <position> ]? )
<clip-source> = <url>
<color> = <rgb()> | <rgba()> | <hsl()> | <hsla()> | <hex-color> | <named-color> | currentcolor | <deprecated-system-color>
<color-stop> = <color> <length-percentage>?
<color-stop-list> = <color-stop>#{2,}
<common-lig-values> = [ common-ligatures | no-common-ligatures ]
<composite-style> = clear | copy | source-over | source-in | source-out | source-atop | destination-over | destination-in | destination-out | destination-atop | xor
<compositing-operator> = add | subtract | intersect | exclude
<content-list> = [ <string> | contents | <url> | <quote> | <target> | <leader()> ]+
<contextual-alt-values> = [ contextual | no-contextual ]
<contrast()> = contrast( [ <number-percentage> ] )
<counter-style> = <counter-style-name> | symbols()
<counter-style-name> = <custom-ident>
<cross-fade()> = cross-fade( <cf-mixing-image> , <cf-final-image>? )
<deprecated-system-color> = ActiveBorder | ActiveCaption | AppWorkspace | Background | ButtonFace | ButtonHighlight | ButtonShadow | ButtonText | CaptionText | GrayText | Highlight | HighlightText | InactiveBorder | InactiveCaption | InactiveCaptionText | InfoBackground | InfoText | Menu | MenuText | Scrollbar | ThreeDDarkShadow | ThreeDFace | ThreeDHighlight | ThreeDLightShadow | ThreeDShadow | Window | WindowFrame | WindowText
<discretionary-lig-values> = [ discretionary-ligatures | no-discretionary-ligatures ]
<display-box> = contents | none
<display-inside> = flow | flow-root | table | flex | grid | subgrid | ruby
<display-internal> = table-row-group | table-header-group | table-footer-group | table-row | table-cell | table-column-group | table-column | table-caption | ruby-base | ruby-text | ruby-base-container | ruby-text-container
<display-legacy> = inline-block | inline-list-item | inline-table | inline-flex | inline-grid
<display-listitem> = list-item && <display-outside>? && [ flow | flow-root ]?
<display-outside> = block | inline | run-in
<drop-shadow()> = drop-shadow( <length>{2,3} <color>? )
<east-asian-variant-values> = [ jis78 | jis83 | jis90 | jis04 | simplified | traditional ]
<east-asian-width-values> = [ full-width | proportional-width ]
<element()> = element( <id-selector> )
<ellipse()> = ellipse( [ <shape-radius>{2} ]? [ at <position> ]? )
<ending-shape> = circle | ellipse
<explicit-track-list> = [ <line-names>? <track-size> ]+ <line-names>?
<family-name> = <string> | <custom-ident>+
<feature-tag-value> = <string> [ <integer> | on | off ]?
<feature-type> = @stylistic | @historical-forms | @styleset | @character-variant | @swash | @ornaments | @annotation
<feature-value-block> = <feature-type> {
  <feature-value-declaration-list>
}
<feature-value-block-list> = <feature-value-block>+
<feature-value-declaration> = <custom-ident> : <integer>+ ;
<feature-value-declaration-list> = <feature-value-declaration>
<feature-value-name> = <custom-ident>
<fill-rule> = nonzero | evenodd
<filter-function> = <blur()> | <brightness()> | <contrast()> | <drop-shadow()> | <grayscale()> | <hue-rotate()> | <invert()> | <opacity()> | <sepia()> | <saturate()>
<filter-function-list> = [ <filter-function> | <url> ]+
<final-bg-layer> = <bg-image> || <position> [ / <bg-size> ]? || <repeat-style> || <attachment> || <box> || <box> || <'background-color'>
<fit-content()> = fit-content( [ <length> | <percentage> ] )
<fixed-breadth> = <length-percentage>
<fixed-repeat> = repeat( [ <positive-integer> ] , [ <line-names>? <fixed-size> ]+ <line-names>? )
<fixed-size> = <fixed-breadth> | minmax( <fixed-breadth> , <track-breadth> ) | minmax( <inflexible-breadth> , <fixed-breadth> )
<font-variant-css21> = [ normal | small-caps ]
<frequency-percentage> = <frequency> | <percentage>
<general-enclosed> = [ <function-token> <any-value> ) ] | ( <ident> <any-value> )
<generic-family> = serif | sans-serif | cursive | fantasy | monospace
<generic-name> = serif | sans-serif | cursive | fantasy | monospace
<geometry-box> = <shape-box> | fill-box | stroke-box | view-box
<gradient> = <linear-gradient()> | <repeating-linear-gradient()> | <radial-gradient()> | <repeating-radial-gradient()>
<grayscale()> = grayscale( <number-percentage> )
<grid-line> = auto | <custom-ident> | [ <integer> && <custom-ident>? ] | [ span && [ <integer> || <custom-ident> ] ]
<historical-lig-values> = [ historical-ligatures | no-historical-ligatures ]
<hsl()> = hsl( [ <hue> <percentage> <percentage> [ / <alpha-value> ]? ] | [ <hue>, <percentage>, <percentage>, <alpha-value>? ] )
<hsla()> = hsla( [ <hue> <percentage> <percentage> [ / <alpha-value> ]? ] | [ <hue>, <percentage>, <percentage>, <alpha-value>? ] )
<hue> = <number> | <angle>
<hue-rotate()> = hue-rotate( <angle> )
<image> = <url> | <element()>
<image()> = image( [ [ <image> | <string> ]? , <color>? ]! )
<image-set()> = image-set( <image-set-option># )
<image-set-option> = [ <image> | <string> ] <resolution>
<inflexible-breadth> = <length> | <percentage> | min-content | max-content | auto
<inset()> = inset( <length-percentage>{1,4} [ round <border-radius> ]? )
<invert()> = invert( <number-percentage> )
<keyframe-block> = <keyframe-selector># {
  <declaration-list>
}
<keyframe-block-list> = <keyframe-block>+
<keyframe-selector> = from | to | <percentage>
<keyframes-name> = <custom-ident> | <string>
<leader()> = leader( dotted | solid | space | <string> )
<length-percentage> = <length> | <percentage>
<line-name-list> = [ <line-names> | <name-repeat> ]+
<line-names> = '[' <custom-ident>* ']'
<linear-gradient()> = linear-gradient( [ <angle> | to <side-or-corner> ]? , <color-stop-list> )
<mask-layer> = <mask-reference> || <position> [ / <bg-size> ]? || <repeat-style> || <geometry-box> || [ <geometry-box> | no-clip ] || <compositing-operator> || <masking-mode>
<mask-position> = [ <length-percentage> | left | center | right ] [ <length-percentage> | top | center | bottom ]?
<mask-reference> = none | <image> | <mask-source>
<mask-source> = <url>
<masking-mode> = alpha | luminance | match-source
<matrix()> = matrix( <number> [, <number> ]{5,5} )
<matrix3d()> = matrix3d( <number> [, <number> ]{15,15} )
<mf-boolean> = <mf-name>
<mf-name> = <ident>
<mf-plain> = <mf-name> : <mf-value>
<mf-range> = <mf-name> [ '<' | '>' ]? '='? <mf-value>
| <mf-value> [ '<' | '>' ]? '='? <mf-name>
| <mf-value> '<' '='? <mf-name> '<' '='? <mf-value>
| <mf-value> '>' '='? <mf-name> '>' '='? <mf-value>
<mf-value> = <number> | <dimension> | <ident> | <ratio>
<minmax()> = minmax( [ <length> | <percentage> | <flex> | min-content | max-content | auto ] , [ <length> | <percentage> | <flex> | min-content | max-content | auto ] )
<named-color> = transparent | aliceblue | antiquewhite | aqua | aquamarine | azure | beige | bisque | black | blanchedalmond | blue | blueviolet | brown | burlywood | cadetblue | chartreuse | chocolate | coral | cornflowerblue | cornsilk | crimson | cyan | darkblue | darkcyan | darkgoldenrod | darkgray | darkgreen | darkgrey | darkkhaki | darkmagenta | darkolivegreen | darkorange | darkorchid | darkred | darksalmon | darkseagreen | darkslateblue | darkslategray | darkslategrey | darkturquoise | darkviolet | deeppink | deepskyblue | dimgray | dimgrey | dodgerblue | firebrick | floralwhite | forestgreen | fuchsia | gainsboro | ghostwhite | gold | goldenrod | gray | green | greenyellow | grey | honeydew | hotpink | indianred | indigo | ivory | khaki | lavender | lavenderblush | lawngreen | lemonchiffon | lightblue | lightcoral | lightcyan | lightgoldenrodyellow | lightgray | lightgreen | lightgrey | lightpink | lightsalmon | lightseagreen | lightskyblue | lightslategray | lightslategrey | lightsteelblue | lightyellow | lime | limegreen | linen | magenta | maroon | mediumaquamarine | mediumblue | mediumorchid | mediumpurple | mediumseagreen | mediumslateblue | mediumspringgreen | mediumturquoise | mediumvioletred | midnightblue | mintcream | mistyrose | moccasin | navajowhite | navy | oldlace | olive | olivedrab | orange | orangered | orchid | palegoldenrod | palegreen | paleturquoise | palevioletred | papayawhip | peachpuff | peru | pink | plum | powderblue | purple | rebeccapurple | red | rosybrown | royalblue | saddlebrown | salmon | sandybrown | seagreen | seashell | sienna | silver | skyblue | slateblue | slategray | slategrey | snow | springgreen | steelblue | tan | teal | thistle | tomato | turquoise | violet | wheat | white | whitesmoke | yellow | yellowgreen
<namespace-prefix> = <ident>
<nth> = <an-plus-b> | even | odd
<number-percentage> = <number> | <percentage>
<numeric-figure-values> = [ lining-nums | oldstyle-nums ]
<numeric-fraction-values> = [ diagonal-fractions | stacked-fractions ]
<numeric-spacing-values> = [ proportional-nums | tabular-nums ]
<opacity()> = opacity( [ <number-percentage> ] )
<page-margin-box> = <page-margin-box-type> {
  <declaration-list>
}
<page-margin-box-type> = @top-left-corner | @top-left | @top-center | @top-right | @top-right-corner | @bottom-left-corner | @bottom-left | @bottom-center | @bottom-right | @bottom-right-corner | @left-top | @left-middle | @left-bottom | @right-top | @right-middle | @right-bottom
<page-selector> = <pseudo-page>+ | <ident> <pseudo-page>*
<page-selector-list> = [ <page-selector># ]?
<perspective()> = perspective( <length> )
<polygon()> = polygon( <fill-rule>? , [ <length-percentage> <length-percentage> ]# )
<position> = [[ left | center | right | top | bottom | <length-percentage> ] | [ left | center | right | <length-percentage> ] [ top | center | bottom | <length-percentage> ] | [ center | [ left | right ] <length-percentage>? ] && [ center | [ top | bottom ] <length-percentage>? ]]
<pseudo-page> = : [ left | right | first | blank ]
<quote> = open-quote | close-quote | no-open-quote | no-close-quote
<radial-gradient()> = radial-gradient( [ <ending-shape> || <size> ]? [ at <position> ]? , <color-stop-list> )
<relative-size> = larger | smaller
<repeat-style> = repeat-x | repeat-y | [ repeat | space | round | no-repeat ]{1,2}
<repeating-linear-gradient()> = repeating-linear-gradient( [ <angle> | to <side-or-corner> ]? , <color-stop-list> )
<repeating-radial-gradient()> = repeating-radial-gradient( [ <ending-shape> || <size> ]? [ at <position> ]? , <color-stop-list> )
<rgb()> = rgb( [ [ <percentage>{3} | <number>{3} ] [ / <alpha-value> ]? ] | [ [ <percentage>#{3} | <number>#{3} ] , <alpha-value>? ] )
<rgba()> = rgba( [ [ <percentage>{3} | <number>{3} ] [ / <alpha-value> ]? ] | [ [ <percentage>#{3} | <number>#{3} ] , <alpha-value>? ] )
<rotate()> = rotate( <angle> )
<rotate3d()> = rotate3d( <number> , <number> , <number> , <angle> )
<rotateX()> = rotateX( <angle> )
<rotateY()> = rotateY( <angle> )
<rotateZ()> = rotateZ( <angle> )
<saturate()> = saturate( <number-percentage> )
<scale()> = scale( <number> [, <number> ]? )
<scale3d()> = scale3d( <number> , <number> , <number> )
<scaleX()> = scaleX( <number> )
<scaleY()> = scaleY( <number> )
<scaleZ()> = scaleZ( <number> )
<sepia()> = sepia( <number-percentage> )
<shadow> = inset? && <length>{2,4} && <color>?
<shadow-t> = [ <length>{2,3} && <color>? ]
<shape> = rect( <top>, <right>, <bottom>, <left> )
<shape-box> = <box> | margin-box
<shape-radius> = <length-percentage> | closest-side | farthest-side
<side-or-corner> = [ left | right ] || [ top | bottom ]
<single-animation> = <time> || <single-timing-function> || <time> || <single-animation-iteration-count> || <single-animation-direction> || <single-animation-fill-mode> || <single-animation-play-state> || [ none | <keyframes-name> ]
<single-animation-direction> = normal | reverse | alternate | alternate-reverse
<single-animation-fill-mode> = none | forwards | backwards | both
<single-animation-iteration-count> = infinite | <number>
<single-animation-play-state> = running | paused
<single-timing-function> = <single-transition-timing-function>
<single-transition> = [ none | <single-transition-property> ] || <time> || <single-transition-timing-function> || <time>
<single-transition-property> = all | <custom-ident>
<single-transition-timing-function> = ease | linear | ease-in | ease-out | ease-in-out | step-start | step-end | steps( <integer> [, [ start | end ] ]? ) | cubic-bezier( <number>, <number>, <number>, <number> )
<size> = closest-side | farthest-side | closest-corner | farthest-corner | <length> | <length-percentage>{2}
<skew()> = skew( <angle> [, <angle> ]? )
<skewX()> = skewX( <angle> )
<skewY()> = skewY( <angle> )
<symbol> = <string> | <image> | <ident>
<target> = <target-counter()> | <target-counters()> | <target-text()>
<target-counter()> = target-counter( [ <string> | <url> ] , <custom-ident> [, <counter-style> ]? )
<target-counters()> = target-counters( [ <string> | <url> ] , <custom-ident> , <string> [, <counter-style> ]? )
<target-text()> = target-text( [ <string> | <url> ] [, [ content | before | after | first-letter ] ]? )
<time-percentage> = <time> | <percentage>
<track-breadth> = <length-percentage> | <flex> | min-content | max-content | auto
<track-list> = [ <line-names>? [ <track-size> | <track-repeat> ] ]+ <line-names>?
<track-repeat> = repeat( [ <positive-integer> ] , [ <line-names>? <track-size> ]+ <line-names>? )
<track-size> = <track-breadth> | minmax( <inflexible-breadth> , <track-breadth> ) | fit-content( [ <length> | <percentage> ] )
<transform-function> = [ <matrix()> || <translate()> || <translateX()> || <translateY()> || <scale()> || <scaleX()> || <scaleY()> || <rotate()> || <skew()> || <skewX()> || <skewY()> || <matrix3d()> || <translate3d()> || <translateZ()> || <scale3d()> || <scaleZ()> || <rotate3d()> || <rotateX()> || <rotateY()> || <rotateZ()> || <perspective()> ]+
<transform-list> = <transform-function>+
<translate()> = translate( <length-percentage> [, <length-percentage> ]? )
<translate3d()> = translate3d( <length-percentage> , <length-percentage> , <length> )
<translateX()> = translateX( <length-percentage> )
<translateY()> = translateY( <length-percentage> )
<translateZ()> = translateZ( <length> )
<type-or-unit> = string | integer | color | url | integer | number | length | angle | time | frequency | em | ex | px | rem | vw | vh | vmin | vmax | mm | q | cm | in | pt | pc | deg | grad | rad | ms | s | Hz | kHz | %
<var()> = var( <custom-property-name> [, <declaration-value> ]? )
<viewport-length> = auto | <length-percentage>
