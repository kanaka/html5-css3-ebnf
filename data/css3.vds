<'align-content'> = <'all'> | normal | <baseline-position> | <content-distribution> | <overflow-position>? <content-position>
<'align-items'> = <'all'> | normal | stretch | <baseline-position> | [ <overflow-position>? <self-position> ]
<'align-self'> = <'all'> | auto | normal | stretch | <baseline-position> | <overflow-position>? <self-position>
<'all'> = initial | inherit | unset | revert
<'animation'> = <'all'> | <single-animation>#
<'animation-delay'> = <'all'> | <time>#
<'animation-direction'> = <'all'> | <single-animation-direction>#
<'animation-duration'> = <'all'> | <time>#
<'animation-fill-mode'> = <'all'> | <single-animation-fill-mode>#
<'animation-iteration-count'> = <'all'> | <single-animation-iteration-count>#
<'animation-name'> = <'all'> | [ none | <keyframes-name> ]#
<'animation-play-state'> = <'all'> | <single-animation-play-state>#
<'animation-timing-function'> = <'all'> | <timing-function>#
<'backface-visibility'> = <'all'> | visible | hidden
<'background'> = <'all'> | [ <bg-layer> , ]* <final-bg-layer>
<'background-attachment'> = <'all'> | <attachment>#
<'background-blend-mode'> = <'all'> | <blend-mode>#
<'background-clip'> = <'all'> | <box>#
<'background-color'> = <'all'> | <color>
<'background-image'> = <'all'> | <bg-image>#
<'background-origin'> = <'all'> | <box>#
<'background-position'> = <'all'> | <bg-position>#
<'background-repeat'> = <'all'> | <repeat-style>#
<'background-size'> = <'all'> | <bg-size>#
<'block-size'> = <'all'> | <'width'>
<'border'> = <'all'> | <line-width> || <line-style> || <color>
<'border-block'> = <'all'> | <'border-top-width'> || <'border-top-style'> || <'color'>
<'border-block-color'> = <'all'> | <'border-top-color'>{1,2}
<'border-block-end'> = <'all'> | <'border-top-width'> || <'border-top-style'> || <'color'>
<'border-block-end-color'> = <'all'> | <'border-top-color'>
<'border-block-end-style'> = <'all'> | <'border-top-style'>
<'border-block-end-width'> = <'all'> | <'border-top-width'>
<'border-block-start'> = <'all'> | <'border-top-width'> || <'border-top-style'> || <'color'>
<'border-block-start-color'> = <'all'> | <'border-top-color'>
<'border-block-start-style'> = <'all'> | <'border-top-style'>
<'border-block-start-width'> = <'all'> | <'border-top-width'>
<'border-block-style'> = <'all'> | <'border-top-style'>
<'border-block-width'> = <'all'> | <'border-top-width'>
<'border-bottom'> = <'all'> | <line-width> || <line-style> || <color>
<'border-bottom-color'> = <'all'> | <'border-top-color'>
<'border-bottom-left-radius'> = <'all'> | <length-percentage>{1,2}
<'border-bottom-right-radius'> = <'all'> | <length-percentage>{1,2}
<'border-bottom-style'> = <'all'> | <line-style>
<'border-bottom-width'> = <'all'> | <line-width>
<'border-collapse'> = <'all'> | collapse | separate
<'border-color'> = <'all'> | <color>{1,4}
<'border-end-end-radius'> = <'all'> | <length-percentage>{1,2}
<'border-end-start-radius'> = <'all'> | <length-percentage>{1,2}
<'border-image'> = <'all'> | <'border-image-source'> || <'border-image-slice'> [ / <'border-image-width'> | / <'border-image-width'>? / <'border-image-outset'> ]? || <'border-image-repeat'>
<'border-image-outset'> = <'all'> | [ <length> | <number> ]{1,4}
<'border-image-repeat'> = <'all'> | [ stretch | repeat | round | space ]{1,2}
<'border-image-slice'> = <'all'> | <number-percentage>{1,4} && fill?
<'border-image-source'> = <'all'> | none | <image>
<'border-image-width'> = <'all'> | [ <length-percentage> | <number> | auto ]{1,4}
<'border-inline'> = <'all'> | <'border-top-width'> || <'border-top-style'> || <'color'>
<'border-inline-color'> = <'all'> | <'border-top-color'>{1,2}
<'border-inline-end'> = <'all'> | <'border-top-width'> || <'border-top-style'> || <'color'>
<'border-inline-end-color'> = <'all'> | <'border-top-color'>
<'border-inline-end-style'> = <'all'> | <'border-top-style'>
<'border-inline-end-width'> = <'all'> | <'border-top-width'>
<'border-inline-start'> = <'all'> | <'border-top-width'> || <'border-top-style'> || <'color'>
<'border-inline-start-color'> = <'all'> | <'border-top-color'>
<'border-inline-start-style'> = <'all'> | <'border-top-style'>
<'border-inline-start-width'> = <'all'> | <'border-top-width'>
<'border-inline-style'> = <'all'> | <'border-top-style'>
<'border-inline-width'> = <'all'> | <'border-top-width'>
<'border-left'> = <'all'> | <line-width> || <line-style> || <color>
<'border-left-color'> = <'all'> | <color>
<'border-left-style'> = <'all'> | <line-style>
<'border-left-width'> = <'all'> | <line-width>
<'border-radius'> = <'all'> | <length-percentage>{1,4} [ / <length-percentage>{1,4} ]?
<'border-right'> = <'all'> | <line-width> || <line-style> || <color>
<'border-right-color'> = <'all'> | <color>
<'border-right-style'> = <'all'> | <line-style>
<'border-right-width'> = <'all'> | <line-width>
<'border-spacing'> = <'all'> | <length> <length>?
<'border-start-end-radius'> = <'all'> | <length-percentage>{1,2}
<'border-start-start-radius'> = <'all'> | <length-percentage>{1,2}
<'border-style'> = <'all'> | <line-style>{1,4}
<'border-top'> = <'all'> | <line-width> || <line-style> || <color>
<'border-top-color'> = <'all'> | <color>
<'border-top-left-radius'> = <'all'> | <length-percentage>{1,2}
<'border-top-right-radius'> = <'all'> | <length-percentage>{1,2}
<'border-top-style'> = <'all'> | <line-style>
<'border-top-width'> = <'all'> | <line-width>
<'border-width'> = <'all'> | <line-width>{1,4}
<'bottom'> = <'all'> | <length> | <percentage> | auto
<'box-decoration-break'> = <'all'> | slice | clone
<'box-shadow'> = <'all'> | none | <shadow>#
<'box-sizing'> = <'all'> | content-box | border-box
<'break-after'> = <'all'> | auto | avoid | always | all | avoid-page | page | left | right | recto | verso | avoid-column | column | avoid-region | region
<'break-before'> = <'all'> | auto | avoid | always | all | avoid-page | page | left | right | recto | verso | avoid-column | column | avoid-region | region
<'break-inside'> = <'all'> | auto | avoid | avoid-page | avoid-column | avoid-region
<'caption-side'> = <'all'> | top | bottom | block-start | block-end | inline-start | inline-end
<'caret-color'> = <'all'> | auto | <color>
<'clear'> = <'all'> | none | left | right | both | inline-start | inline-end
<'clip'> = <'all'> | <shape> | auto
<'clip-path'> = <'all'> | <clip-source> | [ <basic-shape> || <geometry-box> ] | none
<'color'> = <'all'> | <color>
<'color-adjust'> = <'all'> | economy | exact
<'column-count'> = <'all'> | <integer> | auto
<'column-fill'> = <'all'> | auto | balance | balance-all
<'column-gap'> = <'all'> | normal | <length-percentage>
<'column-rule'> = <'all'> | <'column-rule-width'> || <'column-rule-style'> || <'column-rule-color'>
<'column-rule-color'> = <'all'> | <color>
<'column-rule-style'> = <'all'> | <'border-style'>
<'column-rule-width'> = <'all'> | <'border-width'>
<'column-span'> = <'all'> | none | all
<'column-width'> = <'all'> | <length> | auto
<'columns'> = <'all'> | <'column-width'> || <'column-count'>
<'content'> = <'all'> | normal | none | [ <content-replacement> | <content-list> ] [/ <string> ]?
<'counter-increment'> = <'all'> | [ <custom-ident> <integer>? ]+ | none
<'counter-reset'> = <'all'> | [ <custom-ident> <integer>? ]+ | none
<'cursor'> = <'all'> | [ [ <url> [ <x> <y> ]? , ]* [ auto | default | none | context-menu | help | pointer | progress | wait | cell | crosshair | text | vertical-text | alias | copy | move | no-drop | not-allowed | e-resize | n-resize | ne-resize | nw-resize | s-resize | se-resize | sw-resize | w-resize | ew-resize | ns-resize | nesw-resize | nwse-resize | col-resize | row-resize | all-scroll | zoom-in | zoom-out | grab | grabbing ] ]
<'direction'> = <'all'> | ltr | rtl
<'display'> = <'all'> | [ <display-outside> || <display-inside> ] | <display-listitem> | <display-internal> | <display-box> | <display-legacy>
<'empty-cells'> = <'all'> | show | hide
<'filter'> = <'all'> | none | <filter-function-list>
<'flex'> = <'all'> | none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]
<'flex-basis'> = <'all'> | content | <'width'>
<'flex-direction'> = <'all'> | row | row-reverse | column | column-reverse
<'flex-flow'> = <'all'> | <'flex-direction'> || <'flex-wrap'>
<'flex-grow'> = <'all'> | <number>
<'flex-shrink'> = <'all'> | <number>
<'flex-wrap'> = <'all'> | nowrap | wrap | wrap-reverse
<'float'> = <'all'> | left | right | none | inline-start | inline-end
<'font'> = <'all'> | [ [ <'font-style'> || <font-variant-css21> || <'font-weight'> || <'font-stretch'> ]? <'font-size'> [ / <'line-height'> ]? <'font-family'> ] | caption | icon | menu | message-box | small-caption | status-bar
<'font-family'> = <'all'> | [ <family-name> | <generic-family> ]#
<'font-feature-settings'> = <'all'> | normal | <feature-tag-value>#
<'font-kerning'> = <'all'> | auto | normal | none
<'font-language-override'> = <'all'> | normal | <string>
<'font-optical-sizing'> = <'all'> | auto | none
<'font-size'> = <'all'> | <absolute-size> | <relative-size> | <length-percentage>
<'font-size-adjust'> = <'all'> | none | <number>
<'font-stretch'> = <'all'> | <font-stretch-absolute>
<'font-style'> = <'all'> | normal | italic | oblique <angle>?
<'font-synthesis'> = <'all'> | none | [ weight || style ]
<'font-variant'> = <'all'> | normal | none | [ <common-lig-values> || <discretionary-lig-values> || <historical-lig-values> || <contextual-alt-values> || stylistic( <feature-value-name> ) || historical-forms || styleset( <feature-value-name># ) || character-variant( <feature-value-name># ) || swash( <feature-value-name> ) || ornaments( <feature-value-name> ) || annotation( <feature-value-name> ) || [ small-caps | all-small-caps | petite-caps | all-petite-caps | unicase | titling-caps ] || <numeric-figure-values> || <numeric-spacing-values> || <numeric-fraction-values> || ordinal || slashed-zero || <east-asian-variant-values> || <east-asian-width-values> || ruby ]
<'font-variant-alternates'> = <'all'> | normal | [ stylistic( <feature-value-name> ) || historical-forms || styleset( <feature-value-name># ) || character-variant( <feature-value-name># ) || swash( <feature-value-name> ) || ornaments( <feature-value-name> ) || annotation( <feature-value-name> ) ]
<'font-variant-caps'> = <'all'> | normal | small-caps | all-small-caps | petite-caps | all-petite-caps | unicase | titling-caps
<'font-variant-east-asian'> = <'all'> | normal | [ <east-asian-variant-values> || <east-asian-width-values> || ruby ]
<'font-variant-ligatures'> = <'all'> | normal | none | [ <common-lig-values> || <discretionary-lig-values> || <historical-lig-values> || <contextual-alt-values> ]
<'font-variant-numeric'> = <'all'> | normal | [ <numeric-figure-values> || <numeric-spacing-values> || <numeric-fraction-values> || ordinal || slashed-zero ]
<'font-variant-position'> = <'all'> | normal | sub | super
<'font-weight'> = <'all'> | <font-weight-absolute> | bolder | lighter
<'gap'> = <'all'> | <'row-gap'> <'column-gap'>?
<'grid'> = <'all'> | <'grid-template'> | <'grid-template-rows'> / [ auto-flow && dense? ] <'grid-auto-columns'>? | [ auto-flow && dense? ] <'grid-auto-rows'>? / <'grid-template-columns'>
<'grid-area'> = <'all'> | <grid-line> [ / <grid-line> ]{0,3}
<'grid-auto-columns'> = <'all'> | <track-size>+
<'grid-auto-flow'> = <'all'> | [ row | column ] || dense
<'grid-auto-rows'> = <'all'> | <track-size>+
<'grid-column'> = <'all'> | <grid-line> [ / <grid-line> ]?
<'grid-column-end'> = <'all'> | <grid-line>
<'grid-column-start'> = <'all'> | <grid-line>
<'grid-row'> = <'all'> | <grid-line> [ / <grid-line> ]?
<'grid-row-end'> = <'all'> | <grid-line>
<'grid-row-start'> = <'all'> | <grid-line>
<'grid-template'> = <'all'> | none | [ <'grid-template-rows'> / <'grid-template-columns'> ] | [ <line-names>? <string> <track-size>? <line-names>? ]+ [ / <explicit-track-list> ]?
<'grid-template-areas'> = <'all'> | none | <string>+
<'grid-template-columns'> = <'all'> | none | <track-list> | <auto-track-list>
<'grid-template-rows'> = <'all'> | none | <track-list> | <auto-track-list>
<'hanging-punctuation'> = <'all'> | none | [ first || [ force-end | allow-end ] || last ]
<'height'> = <'all'> | [ <length> | <percentage> ] && [ border-box | content-box ]? | available | min-content | max-content | fit-content | auto
<'hyphens'> = <'all'> | none | manual | auto
<'image-orientation'> = <'all'> | from-image | <angle> | [ <angle>? flip ]
<'image-rendering'> = <'all'> | auto | crisp-edges | pixelated
<'inline-size'> = <'all'> | <'width'>
<'inset'> = <'all'> | <'top'>{1,4}
<'inset-block'> = <'all'> | <'top'>{1,2}
<'inset-block-end'> = <'all'> | <'top'>
<'inset-block-start'> = <'all'> | <'top'>
<'inset-inline'> = <'all'> | <'top'>{1,2}
<'inset-inline-end'> = <'all'> | <'top'>
<'inset-inline-start'> = <'all'> | <'top'>
<'isolation'> = <'all'> | auto | isolate
<'justify-content'> = <'all'> | normal | <content-distribution> | <overflow-position>? [ <content-position> | left | right ]
<'justify-items'> = <'all'> | normal | stretch | <baseline-position> | <overflow-position>? [ <self-position> | left | right ] | legacy | legacy && [ left | right | center ]
<'justify-self'> = <'all'> | auto | normal | stretch | <baseline-position> | <overflow-position>? [ <self-position> | left | right ]
<'left'> = <'all'> | <length> | <percentage> | auto
<'letter-spacing'> = <'all'> | normal | <length>
<'line-break'> = <'all'> | auto | loose | normal | strict
<'line-height'> = <'all'> | normal | <number> | <length> | <percentage>
<'list-style'> = <'all'> | <'list-style-type'> || <'list-style-position'> || <'list-style-image'>
<'list-style-image'> = <'all'> | <url> | none
<'list-style-position'> = <'all'> | inside | outside
<'list-style-type'> = <'all'> | <counter-style> | <string> | none
<'margin'> = <'all'> | [ <length> | <percentage> | auto ]{1,4}
<'margin-block'> = <'all'> | <'margin-left'>{1,2}
<'margin-block-end'> = <'all'> | <'margin-left'>
<'margin-block-start'> = <'all'> | <'margin-left'>
<'margin-bottom'> = <'all'> | <length> | <percentage> | auto
<'margin-inline'> = <'all'> | <'margin-left'>{1,2}
<'margin-inline-end'> = <'all'> | <'margin-left'>
<'margin-inline-start'> = <'all'> | <'margin-left'>
<'margin-left'> = <'all'> | <length> | <percentage> | auto
<'margin-right'> = <'all'> | <length> | <percentage> | auto
<'margin-top'> = <'all'> | <length> | <percentage> | auto
<'mask'> = <'all'> | <mask-layer>#
<'mask-clip'> = <'all'> | [ <geometry-box> | no-clip ]#
<'mask-composite'> = <'all'> | <compositing-operator>#
<'mask-image'> = <'all'> | <mask-reference>#
<'mask-mode'> = <'all'> | <masking-mode>#
<'mask-origin'> = <'all'> | <geometry-box>#
<'mask-position'> = <'all'> | <position>#
<'mask-repeat'> = <'all'> | <repeat-style>#
<'mask-size'> = <'all'> | <bg-size>#
<'mask-type'> = <'all'> | luminance | alpha
<'max-height'> = <'all'> | <length> | <percentage> | none | max-content | min-content | fit-content | fill-available
<'max-width'> = <'all'> | <length> | <percentage> | none | max-content | min-content | fit-content | fill-available
<'min-block-size'> = <'all'> | <'min-width'>
<'min-height'> = <'all'> | <length> | <percentage> | auto | max-content | min-content | fit-content | fill-available
<'min-inline-size'> = <'all'> | <'min-width'>
<'min-width'> = <'all'> | <length> | <percentage> | auto | max-content | min-content | fit-content | fill-available
<'mix-blend-mode'> = <'all'> | <blend-mode>
<'object-fit'> = <'all'> | fill | contain | cover | none | scale-down
<'object-position'> = <'all'> | <position>
<'opacity'> = <'all'> | <number>
<'order'> = <'all'> | <integer>
<'orphans'> = <'all'> | <integer>
<'outline'> = <'all'> | [ <'outline-color'> || <'outline-style'> || <'outline-width'> ]
<'outline-color'> = <'all'> | <color> | invert
<'outline-offset'> = <'all'> | <length>
<'outline-style'> = <'all'> | auto | <'border-style'>
<'outline-width'> = <'all'> | <line-width>
<'overflow'> = <'all'> | [ visible | hidden | clip | scroll | auto ]{1,2}
<'overflow-wrap'> = <'all'> | normal | break-word | anywhere
<'overflow-x'> = <'all'> | visible | hidden | clip | scroll | auto
<'overflow-y'> = <'all'> | visible | hidden | clip | scroll | auto
<'padding'> = <'all'> | [ <length> | <percentage> ]{1,4}
<'padding-block'> = <'all'> | <'padding-left'>{1,2}
<'padding-block-end'> = <'all'> | <'padding-left'>
<'padding-block-start'> = <'all'> | <'padding-left'>
<'padding-bottom'> = <'all'> | <length> | <percentage>
<'padding-inline'> = <'all'> | <'padding-left'>{1,2}
<'padding-inline-end'> = <'all'> | <'padding-left'>
<'padding-inline-start'> = <'all'> | <'padding-left'>
<'padding-left'> = <'all'> | <length> | <percentage>
<'padding-right'> = <'all'> | <length> | <percentage>
<'padding-top'> = <'all'> | <length> | <percentage>
<'page-break-after'> = <'all'> | auto | always | avoid | left | right | recto | verso
<'page-break-before'> = <'all'> | auto | always | avoid | left | right | recto | verso
<'page-break-inside'> = <'all'> | auto | avoid
<'perspective'> = <'all'> | none | <length>
<'perspective-origin'> = <'all'> | <position>
<'place-content'> = <'all'> | <'align-content'> <'justify-content'>?
<'place-items'> = <'all'> | <'align-items'> <'justify-items'>?
<'place-self'> = <'all'> | <'align-self'> <'justify-self'>?
<'pointer-events'> = <'all'> | auto | none | visiblePainted | visibleFill | visibleStroke | visible | painted | fill | stroke | all | inherit
<'position'> = <'all'> | static | relative | absolute | sticky | fixed
<'quotes'> = <'all'> | none | [ <string> <string> ]+
<'resize'> = <'all'> | none | both | horizontal | vertical | block | inline
<'right'> = <'all'> | <length> | <percentage> | auto
<'rotate'> = <'all'> | none | <angle> | [ x | y | z | <number>{3} ] && <angle>
<'row-gap'> = <'all'> | normal | <length-percentage>
<'scale'> = <'all'> | none | <number>{1,3}
<'scroll-behavior'> = <'all'> | auto | smooth
<'scroll-margin'> = <'all'> | [ auto | <length> ]{1,4}
<'scroll-margin-block'> = <'all'> | [ auto | <length> ]{1,2}
<'scroll-margin-block-end'> = <'all'> | auto | <length>
<'scroll-margin-block-start'> = <'all'> | auto | <length> 
<'scroll-margin-bottom'> = <'all'> | auto | <length>
<'scroll-margin-inline'> = <'all'> | [auto | <length> ]{1,2}
<'scroll-margin-inline-end'> = <'all'> | auto | <length>
<'scroll-margin-inline-start'> = <'all'> | auto | <length>
<'scroll-margin-left'> = <'all'> | auto | <length>
<'scroll-margin-right'> = <'all'> | auto | <length>
<'scroll-margin-top'> = <'all'> | auto | <length>
<'scroll-padding'> = <'all'> | [ auto | <length> | <percentage> ]{1,4}
<'scroll-padding-block'> = <'all'> | [auto | <length> | <percentage> ]{1,2}
<'scroll-padding-block-end'> = <'all'> | auto | <length> | <percentage>
<'scroll-padding-block-start'> = <'all'> | auto | <length> | <percentage>
<'scroll-padding-bottom'> = <'all'> | auto | <length> | <percentage>
<'scroll-padding-inline'> = <'all'> | [auto | <length> | <percentage> ]{1,2}
<'scroll-padding-inline-end'> = <'all'> | auto | <length> | <percentage>
<'scroll-padding-inline-start'> = <'all'> | auto | <length> | <percentage>
<'scroll-padding-left'> = <'all'> | auto | <length> | <percentage>
<'scroll-padding-right'> = <'all'> | auto | <length> | <percentage>
<'scroll-padding-top'> = <'all'> | auto | <length> | <percentage>
<'scroll-snap-align'> = <'all'> | [ none | start | end | center ]{1,2}
<'scroll-snap-stop'> = <'all'> | normal | always
<'scroll-snap-type'> = <'all'> | none | [ x | y | block | inline | both ] [ mandatory | proximity ]
<'scrollbar-color'> = <'all'> | auto | dark | light | <color>{2}
<'scrollbar-width'> = <'all'> | auto | thin | none
<'shape-image-threshold'> = <'all'> | <number>
<'shape-margin'> = <'all'> | <length-percentage>
<'shape-outside'> = <'all'> | none | <shape-box> || <basic-shape> | <image>
<'tab-size'> = <'all'> | <integer> | <length>
<'table-layout'> = <'all'> | auto | fixed
<'text-align'> = <'all'> | start | end | left | right | center | justify | match-parent
<'text-align-last'> = <'all'> | auto | start | end | left | right | center | justify
<'text-combine-upright'> = <'all'> | none | all | [ digits <integer>? ]
<'text-decoration'> = <'all'> | <'text-decoration-line'> || <'text-decoration-style'> || <'text-decoration-color'>
<'text-decoration-color'> = <'all'> | <color>
<'text-decoration-line'> = <'all'> | none | [ underline || overline || line-through || blink ]
<'text-decoration-style'> = <'all'> | solid | double | dotted | dashed | wavy
<'text-emphasis'> = <'all'> | <'text-emphasis-style'> || <'text-emphasis-color'>
<'text-emphasis-color'> = <'all'> | <color>
<'text-emphasis-position'> = <'all'> | [ over | under ] && [ right | left ]
<'text-emphasis-style'> = <'all'> | none | [ [ filled | open ] || [ dot | circle | double-circle | triangle | sesame ] ] | <string>
<'text-indent'> = <'all'> | <length-percentage> && hanging? && each-line?
<'text-justify'> = <'all'> | auto | inter-character | inter-word | none
<'text-orientation'> = <'all'> | mixed | upright | sideways
<'text-overflow'> = <'all'> | [ clip | ellipsis | <string> ]{1,2}
<'text-rendering'> = <'all'> | auto | optimizeSpeed | optimizeLegibility | geometricPrecision
<'text-shadow'> = <'all'> | none | <shadow-t>#
<'text-transform'> = <'all'> | none | capitalize | uppercase | lowercase | full-width | full-size-kana
<'text-underline-position'> = <'all'> | auto | [ under || [ left | right ] ]
<'top'> = <'all'> | <length> | <percentage> | auto
<'touch-action'> = <'all'> | auto | none | [ [ pan-x | pan-left | pan-right ] || [ pan-y | pan-up | pan-down ] || pinch-zoom ] | manipulation
<'transform'> = <'all'> | none | <transform-list>
<'transform-box'> = <'all'> | border-box | fill-box | view-box
<'transform-origin'> = <'all'> | [ <length-percentage> | left | center | right | top | bottom ] | [ [ <length-percentage> | left | center | right ] && [ <length-percentage> | top | center | bottom ] ] <length>?
<'transform-style'> = <'all'> | flat | preserve-3d
<'transition'> = <'all'> | <single-transition>#
<'transition-delay'> = <'all'> | <time>#
<'transition-duration'> = <'all'> | <time>#
<'transition-property'> = <'all'> | none | <single-transition-property>#
<'transition-timing-function'> = <'all'> | <timing-function>#
<'translate'> = <'all'> | none | <length-percentage> [ <length-percentage> <length>? ]?
<'unicode-bidi'> = <'all'> | normal | embed | isolate | bidi-override | isolate-override | plaintext
<'vertical-align'> = <'all'> | baseline | sub | super | text-top | text-bottom | middle | top | bottom | <percentage> | <length>
<'visibility'> = <'all'> | visible | hidden | collapse
<'white-space'> = <'all'> | normal | pre | nowrap | pre-wrap | pre-line
<'widows'> = <'all'> | <integer>
<'width'> = <'all'> | [ <length> | <percentage> ] && [ border-box | content-box ]? | available | min-content | max-content | fit-content | auto
<'will-change'> = <'all'> | auto | <animateable-feature>#
<'word-break'> = <'all'> | normal | break-all | keep-all | break-word
<'word-spacing'> = <'all'> | normal | <length-percentage>
<'word-wrap'> = <'all'> | normal | break-word
<'writing-mode'> = <'all'> | horizontal-tb | vertical-rl | vertical-lr | sideways-rl | sideways-lr
<'z-index'> = <'all'> | auto | <integer>


<absolute-size> = xx-small | x-small | small | medium | large | x-large | xx-large
<alpha-value> = <number> | <percentage>
<angle-percentage> = <angle> | <percentage>
<angular-color-hint> = <angle-percentage>
<angular-color-stop> = <color> && <color-stop-angle>?
<angular-color-stop-list> = [ <angular-color-stop> [, <angular-color-hint>]? ]# , <angular-color-stop>
<animateable-feature> = scroll-position | contents | <custom-ident>
<attachment> = scroll | fixed | local
<attr()> = attr( <attr-name> <type-or-unit>? [, <attr-fallback> ]? )
<attr-matcher> = [ '~' | '|' | '^' | '$' | '*' ]? '='
<attr-modifier> = i | s
<attribute-selector> = '[' <wq-name> ']' | '[' <wq-name> <attr-matcher> [ <string-token> | <ident-token> ] <attr-modifier>? ']'
<auto-repeat> = repeat( [ auto-fill | auto-fit ] , [ <line-names>? <fixed-size> ]+ <line-names>? )
<auto-track-list> = [ <line-names>? [ <fixed-size> | <fixed-repeat> ] ]* <line-names>? <auto-repeat>
[ <line-names>? [ <fixed-size> | <fixed-repeat> ] ]* <line-names>?
<baseline-position> = [ first | last ]? baseline
<basic-shape> = <inset()> | <circle()> | <ellipse()> | <polygon()>
<bg-image> = none | <image>
<bg-layer> = <bg-image> || <bg-position> [ / <bg-size> ]? || <repeat-style> || <attachment> || <box> || <box>
<bg-position> = [ [ left | center | right | top | bottom | <length-percentage> ] | [ left | center | right | <length-percentage> ] [ top | center | bottom | <length-percentage> ] | [ center | [ left | right ] <length-percentage>? ] && [ center | [ top | bottom ] <length-percentage>? ] ]
<bg-size> = [ <length-percentage> | auto ]{1,2} | cover | contain
<blend-mode> = normal | multiply | screen | overlay | darken | lighten | color-dodge | color-burn | hard-light | soft-light | difference | exclusion | hue | saturation | color | luminosity
<blur()> = blur( <length> )
<box> = border-box | padding-box | content-box
<brightness()> = brightness( <number-percentage> )
<calc()> = calc( <calc-sum> )
<calc-product> = <calc-value> [ '*' <calc-value> | '/' <number> ]*
<calc-sum> = <calc-product> [ [ '+' | '-' ] <calc-product> ]*
<calc-value> = <number> | <dimension> | <percentage> | ( <calc-sum> )
<cf-final-image> = <image> | <color>
<cf-mixing-image> = <percentage>? && <image>
<circle()> = circle( [ <shape-radius> ]? [ at <position> ]? )
<clamp()> = clamp( <calc-sum>#{3} )
<class-selector> = '.' <ident-token>
<clip-source> = <url>
<color> = <rgb()> | <rgba()> | <hsl()> | <hsla()> | <hex-color> | <named-color> | currentcolor | <deprecated-system-color>
<color-stop> = <color-stop-length> | <color-stop-angle>
<color-stop-angle> = <angle-percentage>{1,2}
<color-stop-length> = <length-percentage>{1,2}
<color-stop-list> = [ <linear-color-stop> [, <linear-color-hint>]? ]# , <linear-color-stop>
<combinator> = '>' | '+' | '~' | [ '||' ]
<common-lig-values> = [ common-ligatures | no-common-ligatures ]
<compat> = searchfield | textarea | push-button | button-bevel | slider-horizontal | checkbox | radio | square-button | menulist | menulist-button | listbox | meter | progress-bar
<complex-selector> = <compound-selector> [ <combinator>? <compound-selector> ]*
<complex-selector-list> = <complex-selector>#
<composite-style> = clear | copy | source-over | source-in | source-out | source-atop | destination-over | destination-in | destination-out | destination-atop | xor
<compositing-operator> = add | subtract | intersect | exclude
<compound-selector> = [ <type-selector>? <subclass-selector>* [ <pseudo-element-selector> <pseudo-class-selector>* ]* ]!
<compound-selector-list> = <compound-selector>#
<conic-gradient()> = conic-gradient( [ from <angle> ]? [ at <position> ]?, <angular-color-stop-list> )
<content-distribution> = space-between | space-around | space-evenly | stretch
<content-list> = [ <string> | contents | <image> | <quote> | <target> | <leader()> ]+
<content-position> = center | start | end | flex-start | flex-end
<content-replacement> = <image>
<contextual-alt-values> = [ contextual | no-contextual ]
<contrast()> = contrast( [ <number-percentage> ] )
<counter()> = counter( <custom-ident>, [ <counter-style> | none ]? )
<counter-style> = <counter-style-name> | symbols()
<counter-style-name> = <custom-ident>
<counters()> = counters( <custom-ident>, <string>, [ <counter-style> | none ]? )
<cross-fade()> = cross-fade( <cf-mixing-image> , <cf-final-image>? )
<cubic-bezier-timing-function> = ease | ease-in | ease-out | ease-in-out | cubic-bezier(<number>, <number>, <number>, <number>)
<deprecated-system-color> = ActiveBorder | ActiveCaption | AppWorkspace | Background | ButtonFace | ButtonHighlight | ButtonShadow | ButtonText | CaptionText | GrayText | Highlight | HighlightText | InactiveBorder | InactiveCaption | InactiveCaptionText | InfoBackground | InfoText | Menu | MenuText | Scrollbar | ThreeDDarkShadow | ThreeDFace | ThreeDHighlight | ThreeDLightShadow | ThreeDShadow | Window | WindowFrame | WindowText
<discretionary-lig-values> = [ discretionary-ligatures | no-discretionary-ligatures ]
<display-box> = contents | none
<display-inside> = flow | flow-root | table | flex | grid | ruby
<display-internal> = table-row-group | table-header-group | table-footer-group | table-row | table-cell | table-column-group | table-column | table-caption | ruby-base | ruby-text | ruby-base-container | ruby-text-container
<display-legacy> = inline-block | inline-list-item | inline-table | inline-flex | inline-grid
<display-listitem> = <display-outside>? && [ flow | flow-root ]? && list-item
<display-outside> = block | inline | run-in
<drop-shadow()> = drop-shadow( <length>{2,3} <color>? )
<east-asian-variant-values> = [ jis78 | jis83 | jis90 | jis04 | simplified | traditional ]
<east-asian-width-values> = [ full-width | proportional-width ]
<element()> = element( <id-selector> )
<ellipse()> = ellipse( [ <shape-radius>{2} ]? [ at <position> ]? )
<ending-shape> = circle | ellipse
<env()> = env( <custom-ident> , <declaration-value>? )
<explicit-track-list> = [ <line-names>? <track-size> ]+ <line-names>?
<family-name> = <string> | <custom-ident>+
<feature-tag-value> = <string> [ <integer> | on | off ]?
<feature-type> = @stylistic | @historical-forms | @styleset | @character-variant | @swash | @ornaments | @annotation
<feature-value-block> = <feature-type> '{' <feature-value-declaration-list> '}'
<feature-value-block-list> = <feature-value-block>+
<feature-value-declaration> = <custom-ident> : <integer>+ ;
<feature-value-declaration-list> = <feature-value-declaration>
<feature-value-name> = <custom-ident>
<fill-rule> = nonzero | evenodd
<filter-function> = <blur()> | <brightness()> | <contrast()> | <drop-shadow()> | <grayscale()> | <hue-rotate()> | <invert()> | <opacity()> | <saturate()> | <sepia()>
<filter-function-list> = [ <filter-function> | <url> ]+
<final-bg-layer> = <'background-color'> || <bg-image> || <bg-position> [ / <bg-size> ]? || <repeat-style> || <attachment> || <box> || <box>
<fit-content()> = fit-content( [ <length> | <percentage> ] )
<fixed-breadth> = <length-percentage>
<fixed-repeat> = repeat( [ <positive-integer> ] , [ <line-names>? <fixed-size> ]+ <line-names>? )
<fixed-size> = <fixed-breadth> | minmax( <fixed-breadth> , <track-breadth> ) | minmax( <inflexible-breadth> , <fixed-breadth> )
<font-stretch-absolute> = normal | ultra-condensed | extra-condensed | condensed | semi-condensed | semi-expanded | expanded | extra-expanded | ultra-expanded | <percentage>
<font-variant-css21> = [ normal | small-caps ]
<font-weight-absolute> = normal | bold | <number>
<frequency-percentage> = <frequency> | <percentage>
<general-enclosed> = [ <function-token> <any-value> ) ] | ( <ident> <any-value> )
<generic-family> = serif | sans-serif | cursive | fantasy | monospace
<generic-name> = serif | sans-serif | cursive | fantasy | monospace
<geometry-box> = <shape-box> | fill-box | stroke-box | view-box
<gradient> = <linear-gradient()> | <repeating-linear-gradient()> | <radial-gradient()> | <repeating-radial-gradient()> | <conic-gradient()>
<grayscale()> = grayscale( <number-percentage> )
<grid-line> = auto | <custom-ident> | [ <integer> && <custom-ident>? ] | [ span && [ <integer> || <custom-ident> ] ]
<historical-lig-values> = [ historical-ligatures | no-historical-ligatures ]
<hsl()> = hsl( <hue> <percentage> <percentage> [ / <alpha-value> ]? ) | hsl( <hue>, <percentage>, <percentage>, <alpha-value>? )
<hsla()> = hsla( <hue> <percentage> <percentage> [ / <alpha-value> ]? ) | hsla( <hue>, <percentage>, <percentage>, <alpha-value>? )
<hue> = <number> | <angle>
<hue-rotate()> = hue-rotate( <angle> )
<id-selector> = <hash-token>
<image> = <url> | <image()> | <image-set()> | <element()> | <cross-fade()> | <gradient>
<image()> = image( <image-tags>? [ <image-src>? , <color>? ]! )
<image-set()> = image-set( <image-set-option># )
<image-set-option> = [ <image> | <string> ] <resolution>
<image-src> = <url> | <string>
<image-tags> = ltr | rtl
<inflexible-breadth> = <length> | <percentage> | min-content | max-content | auto
<inset()> = inset( <length-percentage>{1,4} [ round <'border-radius'> ]? )
<invert()> = invert( <number-percentage> )
<keyframe-block> = <keyframe-selector># {
  <declaration-list>
}
<keyframe-block-list> = <keyframe-block>+
<keyframe-selector> = from | to | <percentage>
<keyframes-name> = <custom-ident> | <string>
<leader()> = leader( <leader-type> )
<leader-type> = dotted | solid | space | <string>
<length-percentage> = <length> | <percentage>
<line-name-list> = [ <line-names> | <name-repeat> ]+
<line-names> = '[' <custom-ident>* ']'
<line-style> = none | hidden | dotted | dashed | solid | double | groove | ridge | inset | outset
<line-width> = <length> | thin | medium | thick
<linear-color-hint> = <length-percentage>
<linear-color-stop> = <color> && <color-stop-length>
<linear-gradient()> = linear-gradient( [ <angle> | to <side-or-corner> ]? , <color-stop-list> )
<mask-layer> = <mask-reference> || <position> [ / <bg-size> ]? || <repeat-style> || <geometry-box> || [ <geometry-box> | no-clip ] || <compositing-operator> || <masking-mode>
<mask-position> = [ <length-percentage> | left | center | right ] [ <length-percentage> | top | center | bottom ]?
<mask-reference> = none | <image> | <mask-source>
<mask-source> = <url>
<masking-mode> = alpha | luminance | match-source
<matrix()> = matrix( <number> [, <number> ]{5,5} )
<matrix3d()> = matrix3d( <number> [, <number> ]{15,15} )
<max()> = max( <calc-sum># )
<media-and> = <media-in-parens> [ and <media-in-parens> ]+
<media-condition> = [ not? [ ( <media-condition> ) | <media-feature> | <general-enclosed> ] ] | [ [ ( <media-condition> ) | <media-feature> | <general-enclosed> ] [ [ and | or ] [ ( <media-condition> ) | <media-feature> | <general-enclosed> ] ]+ ]
<media-condition-without-or> = <media-not> | <media-and> | <media-in-parens>
<media-feature> = ( [ <mf-plain> | <mf-boolean> | <mf-range> ] )
<media-in-parens> = ( <media-condition> ) | <media-feature> | <general-enclosed>
<media-not> = not <media-in-parens>
<media-or> = <media-in-parens> [ or <media-in-parens> ]+
<media-query> = <media-condition> | [ not | only ]? <media-type> [ and <media-condition-without-or> ]?
<media-query-list> = <media-query>#
<media-type> = <ident>
<mf-boolean> = <mf-name>
<mf-name> = <ident>
<mf-plain> = <mf-name> : <mf-value>
<mf-range> = <mf-name> [ '<' | '>' ]? '='? <mf-value>
| <mf-value> [ '<' | '>' ]? '='? <mf-name>
| <mf-value> '<' '='? <mf-name> '<' '='? <mf-value>
| <mf-value> '>' '='? <mf-name> '>' '='? <mf-value>
<mf-value> = <number> | <dimension> | <ident> | <ratio>
<min()> = min( <calc-sum># )
<minmax()> = minmax( [ <length> | <percentage> | <flex> | min-content | max-content | auto ] , [ <length> | <percentage> | <flex> | min-content | max-content | auto ] )
<named-color> = transparent | aliceblue | antiquewhite | aqua | aquamarine | azure | beige | bisque | black | blanchedalmond | blue | blueviolet | brown | burlywood | cadetblue | chartreuse | chocolate | coral | cornflowerblue | cornsilk | crimson | cyan | darkblue | darkcyan | darkgoldenrod | darkgray | darkgreen | darkgrey | darkkhaki | darkmagenta | darkolivegreen | darkorange | darkorchid | darkred | darksalmon | darkseagreen | darkslateblue | darkslategray | darkslategrey | darkturquoise | darkviolet | deeppink | deepskyblue | dimgray | dimgrey | dodgerblue | firebrick | floralwhite | forestgreen | fuchsia | gainsboro | ghostwhite | gold | goldenrod | gray | green | greenyellow | grey | honeydew | hotpink | indianred | indigo | ivory | khaki | lavender | lavenderblush | lawngreen | lemonchiffon | lightblue | lightcoral | lightcyan | lightgoldenrodyellow | lightgray | lightgreen | lightgrey | lightpink | lightsalmon | lightseagreen | lightskyblue | lightslategray | lightslategrey | lightsteelblue | lightyellow | lime | limegreen | linen | magenta | maroon | mediumaquamarine | mediumblue | mediumorchid | mediumpurple | mediumseagreen | mediumslateblue | mediumspringgreen | mediumturquoise | mediumvioletred | midnightblue | mintcream | mistyrose | moccasin | navajowhite | navy | oldlace | olive | olivedrab | orange | orangered | orchid | palegoldenrod | palegreen | paleturquoise | palevioletred | papayawhip | peachpuff | peru | pink | plum | powderblue | purple | rebeccapurple | red | rosybrown | royalblue | saddlebrown | salmon | sandybrown | seagreen | seashell | sienna | silver | skyblue | slateblue | slategray | slategrey | snow | springgreen | steelblue | tan | teal | thistle | tomato | turquoise | violet | wheat | white | whitesmoke | yellow | yellowgreen
<namespace-prefix> = <ident>
<ns-prefix> = [ <ident-token> | '*' ]? '|'
<nth> = <an-plus-b> | even | odd
<number-percentage> = <number> | <percentage>
<numeric-figure-values> = [ lining-nums | oldstyle-nums ]
<numeric-fraction-values> = [ diagonal-fractions | stacked-fractions ]
<numeric-spacing-values> = [ proportional-nums | tabular-nums ]
<opacity()> = opacity( [ <number-percentage> ] )
<outline-radius> = <length> | <percentage>
<overflow-position> = unsafe | safe
<page-margin-box> = <page-margin-box-type> '{' <declaration-list> '}'
<page-margin-box-type> = @top-left-corner | @top-left | @top-center | @top-right | @top-right-corner | @bottom-left-corner | @bottom-left | @bottom-center | @bottom-right | @bottom-right-corner | @left-top | @left-middle | @left-bottom | @right-top | @right-middle | @right-bottom
<page-selector> = <pseudo-page>+ | <ident> <pseudo-page>*
<page-selector-list> = [ <page-selector># ]?
<perspective()> = perspective( <length> )
<polygon()> = polygon( <fill-rule>? , [ <length-percentage> <length-percentage> ]# )
<position> = [ [ left | center | right ] || [ top | center | bottom ] | [ left | center | right | <length-percentage> ] [ top | center | bottom | <length-percentage> ]? | [ [ left | right ] <length-percentage> ] && [ [ top | bottom ] <length-percentage> ] ]
<pseudo-class-selector> = ':' <ident-token> | ':' <function-token> <any-value> ')'
<pseudo-element-selector> = ':' <pseudo-class-selector>
<pseudo-page> = : [ left | right | first | blank ]
<quote> = open-quote | close-quote | no-open-quote | no-close-quote
<radial-gradient()> = radial-gradient( [ <ending-shape> || <size> ]? [ at <position> ]? , <color-stop-list> )
<relative-selector> = <combinator>? <complex-selector>
<relative-selector-list> = <relative-selector>#
<relative-size> = larger | smaller
<repeat-style> = repeat-x | repeat-y | [ repeat | space | round | no-repeat ]{1,2}
<repeating-linear-gradient()> = repeating-linear-gradient( [ <angle> | to <side-or-corner> ]? , <color-stop-list> )
<repeating-radial-gradient()> = repeating-radial-gradient( [ <ending-shape> || <size> ]? [ at <position> ]? , <color-stop-list> )
<rgb()> = rgb( <percentage>{3} [ / <alpha-value> ]? ) | rgb( <number>{3} [ / <alpha-value> ]? ) | rgb( <percentage>#{3} [ , <alpha-value> ]? ) | rgb( <number>#{3} [ , <alpha-value> ]? )
<rgba()> = rgba( <percentage>{3} [ / <alpha-value> ]? ) | rgba( <number>{3} [ / <alpha-value> ]? ) | rgba( <percentage>#{3} [ , <alpha-value> ]? ) | rgba( <number>#{3} [ , <alpha-value> ]? )
<rotate()> = rotate( <angle> )
<rotate3d()> = rotate3d( <number> , <number> , <number> , <angle> )
<rotateX()> = rotateX( <angle> )
<rotateY()> = rotateY( <angle> )
<rotateZ()> = rotateZ( <angle> )
<saturate()> = saturate( <number-percentage> )
<scale()> = scale( <number> [, <number> ]? )
<scale3d()> = scale3d( <number> , <number> , <number> )
<scaleX()> = scaleX( <number> )
<scaleY()> = scaleY( <number> )
<scaleZ()> = scaleZ( <number> )
<self-position> = center | start | end | self-start | self-end | flex-start | flex-end
<sepia()> = sepia( <number-percentage> )
<shadow> = inset? && <length>{2,4} && <color>?
<shadow-t> = [ <length>{2,3} && <color>? ]
<shape> = rect( <top>, <right>, <bottom>, <left> ) | rect( <top> <right> <bottom> <left> )
<shape-box> = <box> | margin-box
<shape-radius> = <length-percentage> | closest-side | farthest-side
<side-or-corner> = [ left | right ] || [ top | bottom ]
<single-animation> = <time> || <timing-function> || <time> || <single-animation-iteration-count> || <single-animation-direction> || <single-animation-fill-mode> || <single-animation-play-state> || [ none | <keyframes-name> ]
<single-animation-direction> = normal | reverse | alternate | alternate-reverse
<single-animation-fill-mode> = none | forwards | backwards | both
<single-animation-iteration-count> = infinite | <number>
<single-animation-play-state> = running | paused
<single-transition> = [ none | <single-transition-property> ] || <time> || <timing-function> || <time>
<single-transition-property> = all | <custom-ident>
<size> = closest-side | farthest-side | closest-corner | farthest-corner | <length> | <length-percentage>{2}
<skew()> = skew( <angle> [, <angle> ]? )
<skewX()> = skewX( <angle> )
<skewY()> = skewY( <angle> )
<step-position> = jump-start | jump-end | jump-none | jump-both | start | end
<step-timing-function> = step-start | step-end | steps(<integer>[, <step-position>]?)
<subclass-selector> = <id-selector> | <class-selector> | <attribute-selector> | <pseudo-class-selector>
<supports-condition> = not [ ( <supports-condition> ) | <supports-feature> | <general-enclosed> ] | [ ( <supports-condition> ) | <supports-feature> | <general-enclosed> ] [ and [ ( <supports-condition> ) | <supports-feature> | <general-enclosed> ] ]* | [ ( <supports-condition> ) | <supports-feature> | <general-enclosed> ] [ or [ ( <supports-condition> ) | <supports-feature> | <general-enclosed> ] ]*
<supports-decl> = ( <declaration> )
<supports-feature> = <supports-decl> | <supports-selector-fn>
<supports-in-parens> = ( <supports-condition> ) | <supports-feature> | <general-enclosed>
<supports-selector-fn> = selector( <complex-selector> )
<symbol> = <string> | <image> | <custom-ident>
<target> = <target-counter()> | <target-counters()> | <target-text()>
<target-counter()> = target-counter( [ <string> | <url> ] , <custom-ident> , <counter-style>? )
<target-counters()> = target-counters( [ <string> | <url> ] , <custom-ident> , <string> , <counter-style>? )
<target-text()> = target-text( [ <string> | <url> ] , [ content | before | after | first-letter ]? )
<time-percentage> = <time> | <percentage>
<timing-function> = linear | <cubic-bezier-timing-function> | <step-timing-function>
<track-breadth> = <length-percentage> | <flex> | min-content | max-content | auto
<track-list> = [ <line-names>? [ <track-size> | <track-repeat> ] ]+ <line-names>?
<track-repeat> = repeat( [ <positive-integer> ] , [ <line-names>? <track-size> ]+ <line-names>? )
<track-size> = <track-breadth> | minmax( <inflexible-breadth> , <track-breadth> ) | fit-content( [ <length> | <percentage> ] )
<transform-function> = <matrix()> | <translate()> | <translateX()> | <translateY()> | <scale()> | <scaleX()> | <scaleY()> | <rotate()> | <skew()> | <skewX()> | <skewY()> | <matrix3d()> | <translate3d()> | <translateZ()> | <scale3d()> | <scaleZ()> | <rotate3d()> | <rotateX()> | <rotateY()> | <rotateZ()> | <perspective()>
<transform-list> = <transform-function>+
<translate()> = translate( <length-percentage> [, <length-percentage> ]? )
<translate3d()> = translate3d( <length-percentage> , <length-percentage> , <length> )
<translateX()> = translateX( <length-percentage> )
<translateY()> = translateY( <length-percentage> )
<translateZ()> = translateZ( <length> )
<type-or-unit> = string | integer | color | url | integer | number | length | angle | time | frequency | em | ex | px | rem | vw | vh | vmin | vmax | mm | q | cm | in | pt | pc | deg | grad | rad | ms | s | Hz | kHz | %
<type-selector> = <wq-name> | <ns-prefix>? '*'
<var()> = var( <custom-property-name> , <declaration-value>? )
<viewport-length> = auto | <length-percentage>
<wq-name> = <ns-prefix>? <ident-token>


<'@charset'> = @charset "<charset>";
<'@counter-style'> = @counter-style <counter-style-name> {
  [ system: <counter-system>; ] ||
  [ symbols: <counter-symbols>; ] ||
  [ additive-symbols: <additive-symbols>; ] ||
  [ negative: <negative-symbol>; ] ||
  [ prefix: <prefix>; ] ||
  [ suffix: <suffix>; ] ||
  [ range: <range>; ] ||
  [ pad: <padding>; ] ||
  [ speak-as: <speak-as>; ] ||
  [ fallback: <counter-style-name>; ]
}
<'@font-face'> = @font-face {
  [ font-family: <family-name>; ] ||
  [ src: <src>; ] ||
  [ unicode-range: <unicode-range>; ] ||
  [ font-variant: <font-variant>; ] ||
  [ font-feature-settings: <font-feature-settings>; ] ||
  [ font-variation-settings: <font-variation-settings>; ] ||
  [ font-stretch: <font-stretch>; ] ||
  [ font-weight: <font-weight>; ] ||
  [ font-style: <font-style>; ] ||
  [ font-display: <font-display>; ]
}
<'@font-feature-values'> = @font-feature-values <family-name># {
  <feature-value-block-list>
}
<'@import'> = @import [ <string> | <url> ] [ <media-query-list> ]?;
<'@keyframes'> = @keyframes <keyframes-name> {
  <keyframe-block-list>
}
<'@media'> = @media <media-query-list> {
  <group-rule-body>
}
<'@namespace'> = @namespace <namespace-prefix>? [ <string> | <url> ];
<'@page'> = @page <page-selector-list> {
  <page-body>
}
<'@supports'> = @supports <supports-condition> {
  <group-rule-body>
}
<'@viewport'> = @viewport {
  <group-rule-body>
}


<font-display> = [ auto | block | swap | fallback | optional ]
<src> = [ <url> [ format( <string># ) ]? | local( <family-name> ) ]#
